210425 패스트 캠퍼스 - Ch 9. JS 선행

01. 개요

먼저 브라우저에 동작하기 위해 index.html 생성
head 태그 안에 코드 작성해서 js랑 연결
<script src = "./main.js"></script>
그리고 console.log('lol'); 
html - F12 - console에서 확인 가능!

* 표기법 - 여러 단어를 하나로 인식시킬 때

HTML, CSS
: 'dash-case' 표기법, 'snake_case' 표기법
(ex. the_cute_cat)

JS
: 'camelCase' 표기법, 'PascalCase' 표기법
(ex. theCuteCat)

* 주석
//, /* */, /** **/ Ctrl+/


02. 데이터 종류 = 자료형
JS : 모든 것들이 data로 구성 및 동작
-> data 기준으로 생각하자

# String
: 따옴표@@@로 묶인 것이 하나의 문자 data
* `` (백틱) 
<보간법> 방식
: ${} 추가적인 (다른) data를 보간해서 채워넣겠다

# Number
: 정수 및 부동소수점 숫자를 나타냄
* 따옴표가 있으면 문자 ㅇㅇ "123"

# Boolean
: true/false 두 가지밖에 없는 논리 data
* 따옴표가 있으면 문자 ㅇㅇ "true"

# Undefined
: 값이 할당되지 않은 상태를 나타냄
-> 값이 없는 상태라는 data로 취급

# Null
: 어떤 값이 의도적으로 비어있음을 의미
vs Undefined => Null은 의도적으로 비었다고 '명시'
Undefined는 의도적으로 값을 넣지 않았다고 '명시'


// Object (객체 data)
: 여러 data를 {key:value} 형태로 저장, data의 집합
중괄호 사이 모든 내용을 변수에 삽입


// Array (배열 data)
: 여러 data를 순차적으로 저장 [ ]
0 base numbering -> 0부터 시작임

* ; 안 붙여도 돌아가지만 문법이 그럼 ㅇㅇ


03. 변수, 예약어

* 변수
 : data를 저장하고 참조(사용)하는 data의 이름, 재사용 가능
var은 권장 X
let : 값(data) 재할당 가능 -> const 쓰다가 고칠 거 같으면 let
const : 값 재할당 ㅂㄱㄴ -> 우선 권장 ㅇㅇ

* 예약어 (Reserved Word)
: 특별한 의미를 가지고 있어서 변수나 함수 이름 사용 불가한 단어
-> SyntaxError 남
this, if, break ...


04. 함수 function
: 특정 동작(기능)을 수행하는 일부 코드의 집합(부분)
함수 선언 -> 호출 가능
함수 특정 값 반환 -> 호출 가능
sum(a, b) -> a와 b는 매개변수 Parameters
let a = sum(1, 2) -> 1과 2는 인수 Arguments

* 익명 (이름이 없는) 함수
let world = function () { console.log(); }
-> 함수 호출을 위해 변수에 할당 -> world();
: 함수 선언 x 함수 표현!

* 객체 data
return this.name; 
-> this : 소속되어있는 객체 data를 의미


05. 조건문
: 조건의 결과 truthy, falsy에 따라 다른 코드를 실행하는 구문

if 구문 : 조건 check -> true면 { } 실행!
else 구문 : 조건이 아닐 때 실행!


06. DOM API : HTML을 제어할 때 쓰는 명령
: Document Object Model, Application Programming Interface
DOM : HTML에 들어있는 여러 문서 구조 (div, span, input..)
API : 웹사이트가 동작하기 위한 프로그래밍 명령 

* script 태그는 body 태그 맨 밑에 넣기
or <head> <script defer src = "./main.js"></script> </head>
-> html 태그 다 읽고 다시 script 를 실행하겠다는 뜻

>> browser은 코드를 위에서 아래로 코드를 읽는데
script 태그가 head에 있어서 하단의 body 태그 내용을 모름
-> 그래서 null 이라고 data 출력
-> body 태그 맨 밑에 script 태그 넣거나, defer 속성 추가해서 head 태그 안에 넣기


















